package com.putao.camera.camera.view;import android.content.Context;import android.util.AttributeSet;import android.util.TypedValue;import android.view.Gravity;import android.view.LayoutInflater;import android.view.View;import android.view.ViewGroup;import android.widget.LinearLayout;import android.widget.TextView;import com.putao.camera.R;import com.putao.camera.bean.WaterMarkCategoryInfo;import com.putao.camera.bean.WaterMarkConfigInfo;import com.putao.camera.util.WaterMarkHelper;/** * Created by yanglun on 15/3/3. */public class WaterMarkSceneMenuView extends LinearLayout implements View.OnClickListener {    private Context mContext;    private LinearLayout scene_menu_bar_ll, scene_menu_bar_scroll_bar_ll;    private TextView water_mark_scene_none_tv;    private MenuViewClickListener mMenuViewClickListener;    private WaterMarkConfigInfo mWaterMarkConfigInfo;    private int selectedIndex = 0;    public WaterMarkSceneMenuView(Context context, AttributeSet attrs) {        super(context, attrs);        this.mContext = context;        init();    }    private void init() {        LayoutInflater.from(mContext).inflate(R.layout.layout_water_mark_scene_menu, this);        LinearLayout scene_menu_bar_ll = (LinearLayout) findViewById(R.id.scene_menu_bar_ll);        scene_menu_bar_scroll_bar_ll = (LinearLayout) findViewById(R.id.scene_menu_bar_scroll_bar_ll);        water_mark_scene_none_tv = (TextView) findViewById(R.id.water_mark_scene_none_tv);        water_mark_scene_none_tv.setOnClickListener(this);        mWaterMarkConfigInfo = WaterMarkHelper.getWaterMarkConfigInfoFromDB(mContext);        if (mWaterMarkConfigInfo != null) {            for (int i = 0; i < mWaterMarkConfigInfo.content.camera_watermark.size(); i++) {                WaterMarkCategoryInfo info = mWaterMarkConfigInfo.content.camera_watermark.get(i);                TextView textView = getCategoryTextView(info.category);                textView.setTag(String.valueOf(i));                textView.setOnClickListener(this);                if (i == selectedIndex) {                    int color = mContext.getResources().getColor(R.color.text_color_water_mark_choice_green);                    textView.setTextColor(color);                } else {                    int color = mContext.getResources().getColor(R.color.grey_dark);                    textView.setTextColor(color);                }                ViewGroup.LayoutParams params = water_mark_scene_none_tv.getLayoutParams();                textView.setLayoutParams(params);                textView.setGravity(Gravity.CENTER_HORIZONTAL);                scene_menu_bar_scroll_bar_ll.addView(textView);            }        }    }    public void setSelectedIndex(int iSelectedIndex) {        this.selectedIndex = iSelectedIndex;        setTextClickColor(selectedIndex);    }    public int getSelectedIndex() {        return selectedIndex;    }    public TextView getCategoryTextView(String name) {        TextView textView = new TextView(mContext);        textView.setText(name);        int size = (int) water_mark_scene_none_tv.getTextSize() + 1;        textView.setTextSize(TypedValue.COMPLEX_UNIT_PX, size);        textView.setTextColor(water_mark_scene_none_tv.getCurrentTextColor());        return textView;    }    @Override    public void onClick(View v) {        switch (v.getId()) {            case R.id.water_mark_scene_none_tv:                if (mMenuViewClickListener != null) {                    mMenuViewClickListener.onMenuClick(-1);                    setSelectedIndex(-1);                }                break;            default: {                if (mMenuViewClickListener != null) {                    int index = Integer.valueOf((String) v.getTag()).intValue();                    mMenuViewClickListener.onMenuClick(index);                    setSelectedIndex(index);                }                break;            }        }    }    public void setTextClickColor(int index) {        for (int i = 0; i < scene_menu_bar_scroll_bar_ll.getChildCount(); i++) {            TextView textView = (TextView) scene_menu_bar_scroll_bar_ll.getChildAt(i);            if (i == index) {                int color = mContext.getResources().getColor(R.color.text_color_water_mark_choice_green);                textView.setTextColor(color);            } else {                int color = mContext.getResources().getColor(R.color.grey_dark);                textView.setTextColor(color);            }        }    }    public void setMenuViewClickListener(MenuViewClickListener listener) {        mMenuViewClickListener = listener;    }    public interface MenuViewClickListener {        //        public void onMenuClick(WaterMarkConfigInfo.WaterMarkCategoryInfo info);        public void onMenuClick(int index);    }}